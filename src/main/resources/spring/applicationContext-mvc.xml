<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--mvc的自动扫描-->
    <context:component-scan base-package="com.qidi.grad"></context:component-scan>
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:props/*.properties</value>
            </list>
        </property>
    </bean>
    <!--数据源BoneCP连接池 -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close" lazy-init="false">
        <property name="driverClass" value="${db.driver}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <!--检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0-->
        <property name="idleConnectionTestPeriodInMinutes" value="${idleConnectionTestPeriodInMinutes}"/>
        <!--连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0-->
        <property name="idleMaxAgeInMinutes" value="${idleMaxAgeInMinutes}"/>
        <!--每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="${maxConnectionsPerPartition}"/>
        <!--每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="${minConnectionsPerPartition}"/>
        <!--分区数，默认值2，最小1，推荐3-4，视应用而定  -->
        <property name="partitionCount" value="${partitionCount}"/>
        <!-- 当连接池中的连接耗尽的时候一次同时获取的连接数。Default: 1 -->
        <property name="acquireIncrement" value="${acquireIncrement}"/>
        <!--缓存prepared statements的大小，默认值：0 -->
        <property name="statementsCacheSize" value="${statementsCacheSize}"/>
        <!--每个分区释放链接助理进程的数量，默认值：3 -->
        <property name="defaultAutoCommit" value="true"/>
        <!--链接超时，默认值：Long.MAX_VALUE;单位：毫秒 -->
        <property name="connectionTimeoutInMs" value="30000"/>
    </bean>
    <!--mybatis拦截器-->
    <bean id="sqlStatementInterceptor" class="com.qidi.grad.interceptor.SqlStatementInterceptor"></bean>
    <!--mybatis配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="false">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!-- 自动扫描entity目录, 省掉mybatis-config.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.lsh.wms.model"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:mybatis/**/*Mapper.xml"/>
        <property name="plugins">
            <array>
                <ref bean="sqlStatementInterceptor"/>
            </array>
        </property>
    </bean>
    <!--数据库事物-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用annotation定义事务，注解定义事物 @Transactional(readOnly = false) -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 事务管理 通知 可以方法中使用注解灵活配置，@Transactional(readOnly = false) -->
    <!-- 事务 aop 配置两个配套使用 -->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            &lt;!&ndash; 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 &ndash;&gt;
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>
            &lt;!&ndash; select,count开头的方法,开启只读,提高数据库访问性能 &ndash;&gt;
            <tx:method name="select*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            &lt;!&ndash; 对其他方法 使用默认的事务管理 &ndash;&gt;
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceMethods" expression="execution(* com.eliteams.quick4j.web.service..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>
    -->

    <!-- 定义aspectj 可加快扫描-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <mybatis:scan base-package="com.sohu.wms.dao" factory-ref="sqlSessionFactory"
                  annotation="com.qidi.grad.dao.MyBatisRepository"/>


    <!--因为web.xml中defaultDispatcherServlet对所有请求进行了拦截，所以对一些.css .jpg .html .jsp也进行了拦截，所以此配置项
    保证对对静态资源不拦截-->
    <mvc:default-servlet-handler/>
    <!--视图解析器-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--配置文件上上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>
</beans>